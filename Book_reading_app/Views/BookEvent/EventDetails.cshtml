@model BookEventModel
@inject SignInManager<ApplicationUser> _signInManager;
@inject UserManager<ApplicationUser> _userManager;

@{
    ViewData["Title"] = Model.Title;

    var user = await _userManager.GetUserAsync(User);
    var email = user != null ? user.Email : "";
    var TotalInvited = 0;
}


<h1>Event Details</h1>
<div class="mb-1">
    @if (Model.Date > DateTime.Now)
    {
        if (email == Model.OrganisersEmail || email == "myadmin@bookevents.com")
        {
            <div class="mb-1 btn-group">
                <a asp-controller="BookEvent" asp-action="EditEvent" asp-route-Id="@Model.Id" class="btn btn-primary rounded-0">Edit Event <img src="~/images/editIco-black.svg" height="13" width="13" /></a>

                <form asp-action="DeleteEvent" asp-route-Id="@Model.Id" method="post">
                    <button type="submit" class="btn btn-danger rounded-0">Delete Event <img src="~/images/deleteIco.svg" height="17" width="17" /></button>
                </form>
            </div>
        }
    }
    else
    {


        @if (_signInManager.IsSignedIn(User))
        {
            <div class="alert alert-secondary alert-dismissible fade show" role="alert">
                <strong>Note:</strong> This is an event in past and hence can't be edited or deleted.
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }
    }

</div>
<div class="row">

    <div class="col-md-8 col-sm-12">
        <table class="table table-bordered table-hover">

            <tr>
                <td>Event</td>
                <td>@Model.Title</td>
            </tr>

            <tr>
                <td>Organiser</td>
                <td>@Model.OrganisersEmail</td>
            </tr>

            <tr>
                <td>Event Type</td>
                @if (Model.IsPrivateEvent)
                {
                    <td>Private</td>
                }
                else
                {
                    <td>Public</td>
                }
            </tr>
            <tr>
                <td>Date</td>
                <td>@Model.Date.ToString().Substring(0, 10)</td>
            </tr>

            <tr>
                <td>Location</td>
                <td>@Model.Location</td>
            </tr>

            <tr>
                <td>Start Time</td>
                <td>@Model.StartTime.ToString().Substring(10)</td>
            </tr>

            @if (Model.DurationInHours != null)
            {
                <tr>
                    <td>Duration</td>
                    <td>@Model.DurationInHours Hrs.</td>
                </tr>
            }
            @if (Model.Description != null)
            {
                <tr>
                    <td>Description</td>
                    <td>@Model.Description</td>
                </tr>
            }
            @if (Model.OtherDetails != null)
            {
                <tr>
                    <td>Other Details</td>
                    <td>@Model.OtherDetails</td>
                </tr>
            }
            @if (Model.InviteByEmail != null && Model.InviteByEmail != "")
            {
                @foreach (var i in Model.InviteByEmail)
                {
                    if (i == '@') { TotalInvited++; }

                }
                
                @if (email == Model.OrganisersEmail || email == "myadmin@bookevents.com")
                {
                    <tr>
                        <td>People Invited</td>
                        <td>@Model.InviteByEmail</td>
                    </tr>
                }
            }

            <tr>
                <td>Total People Invited</td>
                <td>@TotalInvited</td>
            </tr>



        </table>


    </div>

    <div class="col-sm-12 col-md-4">

        <div class="col text-center"><h3>Comments</h3></div>
        @if (signInManager.IsSignedIn(User))
        {

            @using (Html.BeginForm("PostCommentOnEvent", "Comment", new { EventId = Model.Id }, FormMethod.Post))
            {
                <div class="d-flex flex-row mt-4 mb-4">
                    <textarea class="form-control mr-3  shadow-sm" name="comment" id="comment" placeholder="Write your comment here..." required></textarea>
                    <button class="btn btn-primary" type="submit" value="Post" id="submitComment">Post Comment</button>
                </div>
            }
        }
        else
        {
            <div class="alert alert-warning" role="alert">
                You must <a asp-action="Login" asp-controller="Account" class="text-info alert-link"> login </a> to post comments.
            </div>

        }
        @if (@Model.Comments != null)
        {
            <div class="list-group mt-2">
                @foreach (var comment in Model.Comments)
                {<div class="mt-1 text-justify col-12 list-group-item-action border border-secondary rounded  bg-light">
                        <h6 class="mt-1 mb-0 text-info"> @comment.PostingUserEmail </h6>
                        <p class="m-0 text-muted">
                            <small>
                                @comment.TimeStamp.ToString().Substring(0, 10) / @comment.TimeStamp.ToString().Substring(10)
                            </small>
                        </p>
                        <p class="bg-white border border-secondary rounded p-1 h5 ">@comment.Comment</p>
                    </div>
                }
            </div>
        }

    </div>
</div>


